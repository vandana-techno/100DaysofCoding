Question link- https://leetcode.com/problems/isomorphic-strings/

Question - Given two strings s and t, determine if they are isomorphic.

Two strings s and t are isomorphic if the characters in s can be replaced to get t.

All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character, but a character may map to itself.

 

Example 1:
Input: s = "egg", t = "add"
Output: true

Example 2:
Input: s = "foo", t = "bar"
Output: false

Example 3:
Input: s = "paper", t = "title"
Output: true
 

Constraints:

1. 1 <= s.length <= 5 * 104
2. t.length == s.length
3. s and t consist of any valid ascii character.

CODE - 

class Solution {
    public boolean isIsomorphic(String s, String t) {
        
        Map<Character, Character> maps = new HashMap<>();
        Map<Character, Character> mapt = new HashMap<>();
        
        for(int i = 0; i< s.length(); i++) {
            if(maps.containsKey(s.charAt(i))) {
                if(!(maps.get(s.charAt(i)) == t.charAt(i))) 
                    return false;
            }
            else if(mapt.containsKey(t.charAt(i))) {
                 if(!(mapt.get(t.charAt(i)) == s.charAt(i))) 
                     return false;
            }
            else {
                maps.put(s.charAt(i), t.charAt(i));
                mapt.put( t.charAt(i), s.charAt(i));
            }
        }
        return true;
    }
}
