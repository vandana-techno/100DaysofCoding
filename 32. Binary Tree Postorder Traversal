Question link - https://leetcode.com/problems/binary-tree-postorder-traversal/description/

Question - Given the root of a binary tree, return the postorder traversal of its nodes' values.

 

Example 1:

GInput: root = [1,null,2,3]

Output: [3,2,1]



Example 2:

Input: root = []

Output: []



Example 3:

Input: root = [1]

Output: [1]

 

Constraints:

1. The number of the nodes in the tree is in the range [0, 100].

2. -100 <= Node.val <= 100


CODE- 
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public void traversal(TreeNode root, List<Integer> ans) {
        if (root == null)
            return;
        if (root.left != null)
            traversal(root.left, ans);
        if (root.right != null)
            traversal(root.right, ans);
        ans.add(root.val);
}
    public List<Integer> postorderTraversal(TreeNode root) {
        List<Integer> ans = new ArrayList<Integer>();
        traversal(root, ans);
        return ans;
    }
}
